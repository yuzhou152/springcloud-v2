
server.port=1131
server.servlet-path=/

spring.application.name=consumer-server-feign
eureka.client.serviceUrl.defaultZone=http://192.168.90.135:1111/eureka/


logging.level.com.example.springcloudclientfeign.service.HelloNormalService=DEBUG


#Camden SR2 开始启用，之前需要手动扩展		Ribbon config
spring.cloud.loadbalancer.retry.enabled=true
#请求连接的超时时间
hello-service.ribbon.ConnectTimeOut=250
#请求处理的超时时间
hello-service.ribbon.ReadTimeOut=1000
#对所有操作请求都进行重试
hello-service.ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
hello-service.ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数
hello-service.ribbon.MaxAutoRetries=1



#org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean	服务实例类配置
#false	是否优先使用IP地址作为主机名的标识
eureka.instance.perferIpAddress=false
#30s	Eureka客户端向服务端发送心跳时间间隔 
eureka.instance.leaseRenewalIntervalInSeconds=30
#90s	Eureka服务端在收到最后一次心跳之后等待的时间上限。超过该上限时间后服务端会将该服务实例从服务清单中剔除，从而禁止服务调用请求被发送到该实例上
eureka.instance.leaseExpirationDurationInSeconds=90
#80		非安全的通信端口号
eureka.instance.nonSecurePort=80
#443	安全的通信端口号
eureka.instance.securePort=443
#true	是否启用非安全的通信端口号
eureka.instance.nonSecurePortEnabled=true
#false	是否启用安全的通信端口号
eureka.instance.securePortEnabled=false



#feign	配置
#feign对hystrix的支持
feign.hystrix.enabled=true
#对请求进行压缩
feign.compression.request.enabled=true
feign.compression.response.enabled=true
feign.compression.request.mime-types=text/xml,application/xml,aoolication/json
feign.compression.request.min-request-size=2048


#hystrix	配置
#所有hystrix配置都可指定commandKey来指定具体的实例
#如:hystrix.command.commandKey.execution.isolation.strategy=THREAD

#execution配置	CommandKey.run()时的配置			hystrix
#仓壁模式使用1.线程池:THREAD 2.信号量隔离:SEMAPHORE
hystrix.command.default.execution.isolation.strategy=THREAD
#仓壁模式使用信号量隔离时的信号量大小
hystrix.command.default.execution.isolation.semaphore.maxConcurrentRequests=10
#进入降级的超时时间
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=1000
#是否启用进入降级的超时时间
hystrix.command.default.execution.timeout.enabled=true
#当请求超时是否要中断请求
hystrix.command.default.execution.isolation.thread.interruptOnTimeout=true
#当请被取消时是否要中断请求
hystrix.command.default.execution.isolation.thread.interruptOnCancel=true


#threadPool		配置			hystrix
#仓壁模式使用线程池时的核心线程数
hystrix.threadpool.default.coreSize=10
#仓壁模式使用线程池时的最大等待队列大小，-1时用SynchronousQueue，否则使用LinkedBlockingQueue
hystrix.threadpool.default.maxQueueSize=-1
#仓壁模式使用线程池时的等待队列的拒绝值，即使小于最大队列，也会拒绝
hystrix.threadpool.default.queueSizeRejectionThreshold=5
#仓壁模式使用线程池时的度量时间窗
hystrix.threadpool.default.metrics.rollingStats.timeInMilliseconds=10000
#仓壁模式使用线程池时的度量时间窗的桶数量
hystrix.threadpool.default.metrics.rollingStats.numBuckets=10


#fallback	配置CommandKey.getFallBack()时的配置			hystrix
#服务降级策略是否启动
hystrix.command.default.fallback.enabled=true
#执行getFallBack()的最大并发请求数
hystrix.command.default.fallback.isolation.semaphore.maxConcurrentRequests=10

#circuitBreaker	配置			hystrix
#当请求命令失败时是否使用断路器来跟踪其健康指标和熔断请求
hystrix.command.default.circuitBreaker.enabled=true
#强制打开断路器
hystrix.command.default.circuitBreaker.forceOpen=false
#强制关闭断路器
hystrix.command.default.circuitBreaker.forceClosed=false
#滚动时间窗中断路器熔断的最小请求数，滚动时间窗默认10s，默认为20，即便有19个请求失败，还是不会熔断
hystrix.command.default.circuitBreaker.requestVolumeThreshold=20
#断路器打开后的休眠时间窗，休眠结束后，断路器会再去尝试连接被断路的服务，连接成功关闭断路器，连接失败打开断路器
hystrix.command.default.circuitBreaker.sleepWindowInMilliseconds=5000
#断路器打开的错误百分比条件，在请求数量超过requestVolumeThreshold的前提下，错误百分比超过50%则打开断路器
hystrix.command.default.circuitBreaker.errorThresholdPercentage=50

#metrics	配置			hystrix
#断路器采集健康指标的滚动时间窗长度，默认会将其拆分为10个桶
hystrix.command.default.metrics.rollingStats.timeInMilliseconds=10000
#断路器采集健康指标的滚动时间窗中拆分的桶的数量
hystrix.command.default.metrics.rollingStats.numBuckets=10
#对命令执行的延迟是否使用百分位数来跟踪和计算，如果为false，则所有概要统计都返回-1
hystrix.command.default.metrics.rollingPercentile.enabled=true
#百分位统计的滚动窗口的持续时间
hystrix.command.default.metrics.rollingPercentile.timeInMilliseconds=60000
#百分位统计的滚动窗口中拆分的桶的数量
hystrix.command.default.metrics.rollingPercentile.numBuckets=6
#每个桶中保留的最大执行次数，如果超过设定值，就重写当前桶
hystrix.command.default.metrics.rollingPercentile.bucketSize=100
#采集影响断路器状态的健康快照（请求的成功，错误百分比）的间隔等待时间
hystrix.command.default.metrics.healthSnapshot.intervalInMilliseconds=500

#requestContext		配置			hystrix
#是否开启缓存
hystrix.command.default.requestCache.enabled=true
#hystrix日志是否打印到HystrixRequestLog中
hystrix.command.default.requestLog.enabled=true

#collapser		配置			hystrix
#一次合并的最大请求数
#hystrix.collapse.default.maxRequestsInBatch=Integer.MAX_VALUE
#批处理过程中每次合并请求的时间窗
hystrix.collapse.default.timerDelayInMilliseconds=10
#批处理过程中是否开启请求缓存
hystrix.collapse.default.requestCache.enabled=true