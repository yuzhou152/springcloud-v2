
server.port=1122
server.servlet-path=/

spring.application.name=hello-service
eureka.client.serviceUrl.defaultZone=http://s1:1111/eureka/,http://s2:1112/eureka/




#org.springframework.cloud.netflix.eureka.EurekaClientConfigBean	Eureka配置
#true	启用eureka客户端
#eureka.client.enabled=true
#30s	从eureka服务端获取注册信息的间隔时间
#eureka.client.registryFetchIntervalSeconds=30
#30s	更新实例信息的变化到Eureka服务端的时间间隔
#eureka.client.instanceInfoReplicationIntervalSeconds=30
#40s	初始化实例信息到Eureka服务端的间隔时间
#eureka.client.initialInstanceInfoReplicationIntervalSeconds=40
#300s	轮询Eureka服务端地址更改的间隔时间
#eureka.client.eurekaServiceUrlPollIntervalSeconds=300
#8s		读取Eureka Server信息的超时时间
#eureka.client.eurekaServerReadTimeoutSeconds=8
#5s		连接Eureka Server的超时时间
#eureka.client.eurekaServerConnectTimeoutSeconds=5
#200	从Eureka客户端到所有Eureka服务端的连接总数
#eureka.client.eurekaServerTotalConnections=200
#50		从Eureka客户端到每个Eureka服务端的连接总数
#eureka.client.eurekaServerTotalConnectionsPerHost=50
#30s	Eureka服务端连接的空闲关闭时间，单位为秒
#eureka.client.eurekaConnectionIdleTimeoutSeconds=30
#2		心跳连接池的初始化线程数
#eureka.client.heartbeatExecutorThreadPoolSize=2
#10		心跳超时重试延迟时间的最大乘数值
#eureka.client.heartbeatExecutorExponentialBackOffBound=10
#2		缓存刷新线程池的初始化线程数
#eureka.client.cacheRefreshExecutorThreadPoolSize=2
#10		缓存刷新重试延迟时间的最大乘数值
#eureka.client.cacheRefreshExecutorExponentialBackOffBound=10
#false	使用DNS来获取Eureka服务端的serviceURL
#eureka.client.useDnsForFetchingServiceUrls=false
#true	是否要将自身的实例信息注册到Eureka服务端
#eureka.client.registerWithEureka=true
#true	是否偏好使用处于相同Zone的Eureka服务端
#eureka.client.preferSameZoneEureka=true
#true	获取实例时是否过滤，仅保留UP状态的实例
#eureka.client.filterOnlyUplnstances=true
#true	是否从Eureka服务端获取注册信息
#eureka.client.fetchRegistry=false


#org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean	服务实例类配置
#false	是否优先使用IP地址作为主机名的标识
#eureka.instance.perferIpAddress=false
#30s	Eureka客户端向服务端发送心跳时间间隔 
#eureka.instance.leaseRenewalIntervalInSeconds=30
#90s	Eureka服务端在收到最后一次心跳之后等待的时间上限。超过该上限时间后服务端会将该服务实例从服务清单中剔除，从而禁止服务调用请求被发送到该实例上
#eureka.instance.leaseExpirationDurationInSeconds=90
#80		非安全的通信端口号
#eureka.instance.nonSecurePort=81
#443	安全的通信端口号
#eureka.instance.securePort=443
#true	是否启用非安全的通信端口号
#eureka.instance.nonSecurePortEnabled=true
#false	是否启用安全的通信端口号
#eureka.instance.securePortEnabled=false